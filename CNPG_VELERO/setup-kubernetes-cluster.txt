#!/bin/bash
# Script to set up a local Kubernetes cluster using kind and configure the environment for CNPG

# Exit on error
set -e

# Variables
KIND_VERSION="v0.20.0"
CLUSTER_NAME="cnpg-sandbox"
NAMESPACE="cnpg-system"

# Install kind if not present
if ! command -v kind &> /dev/null; then
    echo "Installing kind..."
    curl -Lo ./kind https://kind.sigs.k8s.io/dl/${KIND_VERSION}/kind-linux-amd64
    chmod +x ./kind
    sudo mv ./kind /usr/local/bin/kind
fi

# Create kind cluster
echo "Creating kind cluster: ${CLUSTER_NAME}"
cat <<EOF | kind create cluster --name ${CLUSTER_NAME} --config=-
kind: Cluster
apiVersion: kind.x-k8s.io/v1alpha4
nodes:
- role: control-plane
- role: worker
EOF

# Install kubectl if not present
if ! command -v kubectl &> /dev/null; then
    echo "Installing kubectl..."
    curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
    chmod +x ./kubectl
    sudo mv ./kubectl /usr/local/bin/kubectl
fi

# Create namespace for CNPG
echo "Creating namespace: ${NAMESPACE}"
kubectl create namespace ${NAMESPACE} || true

# Apply storage class for persistent volumes
echo "Creating storage class for persistent volumes"
cat <<EOF | kubectl apply -f -
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: standard
provisioner: rancher.io/local-path
reclaimPolicy: Delete
volumeBindingMode: WaitForFirstConsumer
EOF

echo "Kubernetes cluster setup complete. Namespace and storage class configured."